import React, { useState, useEffect } from 'react';

import { Loader, Card, FormField } from '../components';


const RenderCards = ({ data, title }) => {
  if (data?.length) {
    return data.map((post) => {
      return (
        <Card key={post._id} {...post} />
      );
    });
  }

  return (
    <h2 className="mt-5 font-bold text-[#6449ff] text-xl uppercase">
      {title}
    </h2>
  )
};

const Home = () => {
  const [loading, setLoading] = useState(false);
  const [allPosts, setAllPosts] = useState(null);
  const [searchText, setSearchText] = useState('');
  const [searchedResults, setSearchedResults] = useState(null);
  const [searchTimeout, setSearchTimeout] = useState(null);

  const handleSearch = (e) => {
    clearTimeout(searchTimeout);

    setSearchText(e.target.value);

    setSearchTimeout(
      setTimeout(() => {
        const searchResults = allPosts.filter((post) => post.name.toLowerCase().includes(searchText.toLocaleLowerCase()) || post.prompt.toLowerCase().includes(searchText.toLocaleLowerCase()));
  
        setSearchedResults(searchResults);
      }, 500)
    );
  };

  useEffect(() => {
    const fetchPosts = async () => {
      try {
        setLoading(true);
        
        const response = await fetch(`${import.meta.env.VITE_API_URL}post`, {
          method: 'GET',
          headers: {
            'Content-Type': 'application/json',
            authorization: import.meta.env.VITE_SECRET_PASSWORD,
          },
        });

        if (response.ok) {
          const result = await response.json();
          setAllPosts(result.data.reverse());
        }

      } catch (error) {
        alert(error);
      } finally {
        setLoading(false);
      }
    };

    fetchPosts();
  }, []);

  return (
    <section className="max-w-7x1 mx-auto">
      <div>
        <h2 className="font-extrabold text-[#222328] text-[32px]">The Community Showcase</h2>
        <p className="mt-2 text-[#666e75] text-[16px] max-w[500px]">
          Browse through a collection of imagenative and visually stunning images generated by DALL-E AI
        </p>
      </div>
      <div className="mt-16">
        <FormField
          labelName="Search posts"
          type="text"
          name="text"
          placeholder="Search posts"
          value={searchText}
          handleChange={handleSearch}
        />
      </div>
      <div className="mt-10">
        {loading ? (
          <div className="flex justify-center align-center">
            <Loader />
          </div>
        ) : (
          <>
            {searchText && (
              <h3 className="font-medium text-[#666e75] text-xl mb-3">
                Showing results for <span className="text-[#222328]">{searchText}</span>
              </h3>
            )}
            <div className="grid lg:grid-cols-4 sm:grid-cols-3 xs:grid-cols-2 grid-cols-1 gap-3">
              {searchText ? (
                <RenderCards
                  data={searchedResults}
                  title="No search results found"
                />
              ): (
                <RenderCards
                  data={allPosts}
                  title="No posts found"
                />
              )}
            </div>
          </>
        )}
      </div>
    </section>
  );
};

export default Home;